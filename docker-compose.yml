version: '3.4'

networks:
  frontend:
  backend:

services:
  eventshubcatalogapi:
    image: eventshub/catalogapi
    build:
      context: .\EventsHubCatalogAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=EventsHubDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;"
      ExternalBaseUrl: http://localhost:7024
    ports:
      - "7024:80"
    container_name: eventshubcatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  tokenserver:
    image: eventshub/tokenapi
    build:
      context: .\TokenServiceAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=tokensqlserver;Initial Catalog=TokenServiceDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;"
      MvcClient: http://localhost:7501
    ports:
      - "7801:80"
    container_name: eventshubtokenapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokensqlserver
  
  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    ports:
      - "1450:1433"
    container_name: eventshubsqlserver
    networks:
      - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    ports:
      - "1447:1433"
    container_name: eventshubtokensqlserver
    networks:
      - backend

  webmvc:
    image: eventshub/webmvc
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
        max-size: "200k",
        max-file: "10"
      }
    environment:
      CatalogUrl: http://eventshubcatalogapi
      IdentityUrl: http://192.168.168.67:7801
      CallbackUrl: http://localhost:7501
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_jZlpubvlPmcV6QJPReImelQy
      StripePrivateKey: sk_test_bSHT9qxwjpyCOP0qdAvHLfAA
    ports:
      - "7501:80"
    container_name: eventswebshop
    networks:
      - frontend
    depends_on:
      - eventshubcatalogapi
      - tokenserver
      - cart
      - order

  cart:
    image: eventshub/cartapi
    build:
      context: .\CartAPI
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
        max-size: "200k",
        max-file: "10"
      }
    environment:
      IdentityUrl: http://192.168.168.67:7801
      ConnectionString: basket.data
    ports:
      - "7011:80"
    container_name: eventshubcartapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - basket.data
      - rabbitmq

  basket.data:
   image: redis
   ports:
     - "7051:6379"
   container_name: eventshubbasketdata
   networks:
     - backend

  order:
    image: eventshub/orderapi
    build:
      context: .\OrderAPI
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
        max-size: "200k",
        max-file: "10"
      }
    environment:
      IdentityUrl: http://192.168.168.67:7801
      ConnectionString: "Data Source=ordersqlserver;Initial Catalog=OrdersDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;"
    ports:
      - "7021:80"
    container_name: eventshuborderapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - ordersqlserver
      - rabbitmq
  
  ordersqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    ports:
      - "1451:1433"
    container_name: eventshubordersqlserver
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    networks:
      - backend 